@page "{Category:int?}"
@model DotNetLab12.Pages.Shops.ShopModel

@{
    ViewData["Title"] = "Shop";
}

<h1>Shop</h1>


<form method="get">
    <fieldset>
        Category
        @Html.DropDownList("Category")

        <p>
            <input type="submit" value="Show" />
        </p>

    </fieldset>
</form>
    

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Article[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Article[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Article[0].Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Article[0].PictureName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="table_body"

    </tbody>
@section Foot{
        <div>
            <button onclick="showPreviousProducts()"> Previous </button> |
            <button onclick="showNextProducts()"> Next </button>
        </div>
}

@section Scripts{ 
    <script>

            let currentPage = 0; // Numer aktualnej strony
            const productsPerPage = 5; // Ilość produktów na stronie
            let showNextPage = true;

            // Funkcja inicjalizująca, aby automatycznie wyświetlić pewną liczbę produktów
            document.addEventListener("DOMContentLoaded", function () {
                showMoreProducts();
            });

            function showNextProducts() {
                if (showNextPage) {
                    currentPage++;
                    showMoreProducts();
                }
            }

            function showMoreProducts() {
                // Użyj AJAX do pobrania kolejnych produktów
                const xhr = new XMLHttpRequest();

                xhr.onload = function () {
                    if (xhr.readyState === 4 && xhr.status === 200) {
                        try {
                            const articles = xhr.response;
                            console.log(articles)
                            displayProducts(articles);
                            console.log(currentPage);
                            console.log(articles.length);
                            if (articles.length < productsPerPage) {
                                showNextPage = false;
                            } else {
                                showNextPage = true;
                            }
                        } catch (e) {
                            console.log(e)
                            console.warn('There was an error in JSON. Could not parse.')
                        }

                    } else if (this.status == 204) {
                        window.alert("No elements found");
                    } else {
                        console.warn("Received " + this.status + " in response code.");
                    }
                };
                let skip = Math.max(currentPage, 0) * productsPerPage
                let get_request = "/api/articles/skip/" + skip + "/" + productsPerPage;
                console.log("Request is" + get_request);
                xhr.open("get", get_request)
                xhr.responseType = 'json';
                console.log("send");
                xhr.send();
               
            }

            function showPreviousProducts() {
                if (currentPage > 0) {
                    currentPage--;
                    showMoreProducts(); // Ponowne wywołanie funkcji dla poprzedniej strony
                }
            }

            function displayProducts(articles) {

                const tbody = document.getElementById("table_body");

                while (tbody.firstChild) {
                    tbody.removeChild(tbody.firstChild);
                }

                for (const art of articles) {
                    const row = document.createElement("tr")
                    console.log(`${art.Name}`);
                    row.insertCell(-1).innerHTML = art.name;
                    row.insertCell(-1).innerHTML = art.price;
                    row.insertCell(-1).innerHTML = art.category;
                    row.insertCell(-1).innerHTML = art.pictureName;
                    tbody.append(row)
                } 
            }

    </script>
}

</table>
